import tkinter as tk
from tkinter import Canvas


class Prostredi:

    canv: Canvas

    def __init__(self, velikost, color, usekcasu):
        self.vel = velikost
        self.col = color
        self.veci = []
        self.t = usekcasu
        self.root = tk.Tk()
        self.canv = tk.Canvas(self.root, width=self.vel[0], height=self.vel[1])
        self.canv.pack()
        self.canv.create_rectangle(0, 0, self.vel[0], self.vel[1], fill=self.col)

    def start(self):
        while True:      # lepsi podminku
            self.hybaj()
            self.canv.mainloop()

    def pridej(self, vec):
        self.veci.append(vec)

    def hybaj(self):
        for vec in self.veci:
            vec.pohyb(self.t, self.vel)
        self.canv.after(self.t, self.hybaj)


class Mic:
    def __init__(self, hmotnost, poloha, rychlost, velikost, barva, material, canvas):
        self.m = hmotnost
        self.x = poloha
        self.v = rychlost
        self.f = [self.m*G[0], self.m*G[1]]
        self.vel = velikost
        self.barv = barva
        self.mat = material
        self.can = canvas
        self.kolo = self.can.create_oval(self.pol(self.x))
        self.can.itemconfig(self.kolo, fill=self.barv)

    def pol(self, poloha):
        x = [poloha[0]-self.vel, poloha[1]-self.vel]
        y = [poloha[0]+self.vel, poloha[1]+self.vel]
        return x+y

    def pristupny(self, velikost):
        p = [0, 0]
        if self.x[0] <= self.vel:
            p[0] = -1
        if self.x[0] >= velikost[0]-self.vel:
            p[0] = 1
        if self.x[1] <= self.vel:
            p[1] = -1
        if self.x[1] >= velikost[1]-self.vel:
            p[1] = 1
        return p

    def pohyb(self, t, velareny):
        pol0 = self.x
        rychlost = [t / self.m * self.f[0] + self.v[0], t / self.m * self.f[1] + self.v[1]]
        poloha = [rychlost[0] / t + self.x[0], rychlost[1] / t + self.x[1]]
        pripady = self.pristupny(velareny)
        print(pripady)
        if pripady == [0, 0]:
            self.v = rychlost
            self.x = poloha
        else:
            if pripady[0] == -1:
                if rychlost[0] <= 0:
                    rychlost[0] = -self.mat*rychlost[0]
            if pripady[0] == 1:
                if rychlost[0] >= 0:
                    rychlost[0] = -self.mat*rychlost[0]
            if pripady[1] == -1:
                if rychlost[1] <= 0:
                    rychlost[1] = -self.mat*rychlost[1]
            if pripady[1] == 1:
                if rychlost[1] >= 0:
                    rychlost[1] = -self.mat*rychlost[1]
            poloha = [rychlost[0] / t + self.x[0], rychlost[1] / t + self.x[1]]
            self.v = rychlost
            self.x = poloha
        print(self.x, self.v)
        self.can.move(self.kolo, self.x[0]-pol0[0], self.x[1]-pol0[1])

G = [0, 1]
vel = [700, 700]

arena = Prostredi(vel, "black", 20)
M1 = Mic(1, [200, 10], [10, 10], 10, "white", 0.9, arena.canv)
M2 = Mic(1.5, [250, 10], [10, 10], 15, "yellow", 0.9, arena.canv)
M3 = Mic(2, [300, 10], [10, 10], 20, "orange", 0.9, arena.canv)
M4 = Mic(2.5, [350, 10], [10, 10], 25, "red", 0.9, arena.canv)

N1 = Mic(1, [150, 10], [10, 10], 10, "blue", 0.8, arena.canv)
N2 = Mic(1, [100, 10], [10, 10], 10, "grey", 0.7, arena.canv)
N3 = Mic(1, [50, 10], [10, 10], 10, "green", 0.6, arena.canv)

arena.pridej(M1)
arena.pridej(M2)
arena.pridej(M3)
arena.pridej(M4)
arena.pridej(N1)
arena.pridej(N2)
arena.pridej(N3)
arena.start()
